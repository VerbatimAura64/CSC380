/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.movieprogram.Main;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author Robert
 */
public class SignUpForm extends javax.swing.JFrame {

    /**
     * Creates new form SignUpForm
     */
    public SignUpForm() {
        initComponents();
    }

    String name, email;

    protected void insert() {
        try {
            //conn = DriverManager.getConnection("jdbc:derby://localhost:1527/csc380"); 
            String url = "jdbc:derby://localhost:1527/csc380";
            Connection conn = DriverManager.getConnection(url, "brandonx21", "1234");
            //PreparedStatement ps = conn.prepareStatement("INSERT into test1 VALUES (?,?)");

            // You need Derby driver, go to Services -> Databases -> jdbc:derby://blahblah
            // Create the database, connect to it, then change the Connection conn line and String sql line to what you set
            String sql = "INSERT INTO brandonx21.test1 VALUES (?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);

            ps.setString(1, name);
            ps.setString(2, email);
            ps.executeUpdate();
            ps.close();
        } catch (Exception e) {
            System.err.println("Error");
            System.err.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        verifyPasswordField = new javax.swing.JPasswordField();
        passwordField = new javax.swing.JPasswordField();
        emailTextField = new javax.swing.JTextField();
        verifyEmailTextField = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        monthDOB = new javax.swing.JComboBox<>();
        dayDOB = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        emailCheckBox = new javax.swing.JCheckBox();
        termsCheckBox = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Create an Account");

        jLabel2.setText("Name");

        jLabel3.setText("D.O.B.");

        jLabel4.setText("Email");

        jLabel5.setText("Verify Email");

        jLabel6.setText("Password");

        jLabel7.setText("Verify Password");

        verifyPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyPasswordFieldActionPerformed(evt);
            }
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        monthDOB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        dayDOB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018" }));

        emailCheckBox.setSelected(true);
        emailCheckBox.setText("Yes, I'd like to receive future offers!");

        termsCheckBox.setText("I accept the ");

        jLabel8.setForeground(new java.awt.Color(102, 153, 255));
        jLabel8.setText("Terms and Service");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(termsCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(emailCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(verifyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(monthDOB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dayDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(verifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(monthDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(verifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(verifyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emailCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termsCheckBox)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void verifyPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_verifyPasswordFieldActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        try {
            name = nameTextField.getText();
            email = emailTextField.getText();
            String verifiedEmail = verifyEmailTextField.getText();
            char[] password = passwordField.getPassword();
            char[] verifiedPassword = verifyPasswordField.getPassword();
            System.out.println(name);
            System.out.println(email);
            insert();
            if ((name.isEmpty() || email.isEmpty() || verifiedEmail.isEmpty() /*|| password.isEmpty() || verifiedPassword.isEmpty()*/)) {
                if (name.isEmpty()) {
                    nameTextField.requestFocusInWindow();
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "You must enter a name.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (name.contains(":")) {
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Name cannot contain ':'", "Warning", JOptionPane.WARNING_MESSAGE);
                    nameTextField.requestFocusInWindow();
                } else if (email.isEmpty()) {
                    emailTextField.requestFocusInWindow();
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Please enter an email.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (email.contains(":")) {
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Email cannot contain ':'", "Warning", JOptionPane.WARNING_MESSAGE);
                    emailTextField.requestFocusInWindow();
                } else if (verifiedEmail.isEmpty()) {
                    verifyEmailTextField.requestFocusInWindow();
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Please confirm email.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (!email.equals(verifiedEmail)) {
                    verifyEmailTextField.requestFocusInWindow();
                    verifyEmailTextField.selectAll();
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Emails don't match.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (verifiedEmail.contains(":")) {
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "Email cannot contain ':'", "Warning", JOptionPane.WARNING_MESSAGE);
                    verifyEmailTextField.requestFocusInWindow();
                } else if (!termsCheckBox.isSelected()) {
                    Component frame = null;
                    JOptionPane.showMessageDialog(frame, "You must accept the Terms and Conditions.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }/*else if (password.isEmpty()) {
                        passwordField.requestFocusInWindow();
                        displayError.setText("Please enter password");
                    } else if (password.contains(":")) {
                        Component frame = null;
                        JOptionPane.showMessageDialog(frame, "Password cannot contain ':'", "Warning", JOptionPane.WARNING_MESSAGE);
                        passwordField.requestFocusInWindow();
                    } else if (verifiedPassword.isEmpty()) {
                        verifyPasswordField.requestFocusInWindow();
                        Component frame = null;
                        JOptionPane.showMessageDialog(frame, "Please verify password.", "Warning", JOptionPane.WARNING_MESSAGE);
                    } else if (verifiedPassword.contains(":")) {
                        Component frame = null;
                        JOptionPane.showMessageDialog(frame, "Password cannot contain ':'", "Warning", JOptionPane.WARNING_MESSAGE);
                        verifyPasswordField.requestFocusInWindow();
                    }
        else if (verifiedEmail.equals(email) && verifiedPassword.equals(password)) {
                    FileWriter fw = new FileWriter("customer.txt", true);

                    // EDIT
                    fw.write("Customer ID:" + getAccountID() + "\t");
//////////////////                      fw.write(":" + getAccountID());
                    fw.write("Age:\t" + ageTextField.getText() + "\t");
                    fw.write("Name:\t" + nameTextField.getText() + "\t");
                    fw.write("Email Address:\t" + verifyEmailTextField.getText() + "\t");
                    // verifyPasswordTextField.getPassword() yields encrypted text.
                    fw.write("Password:\t" + verifyPasswordTextField.getText() + "\t");
                    displayError.setText(null);
                    displayError.setText("Member Created");

                    //UPDATE LOGIN PAGE customerInfo.txt APPEND MAKE SURE STAYS TRUE
                    FileWriter fw2 = new FileWriter("customerInfo.txt", true);
                    fw2.write(verifyEmailTextField.getText() + ":" + verifyPasswordTextField.getText() + ":" + "\n");

                    // UPDATE FILE for DUPLICATES random.txt
                    FileWriter fw3 = new FileWriter("random.txt", true);
                    fw.write(getAccountID() + ":" + ageTextField.getText() + ":" + nameTextField.getText()
                            + ":" + verifyEmailTextField.getText() + ":" + verifyPasswordTextField.getText() + ":");

                    fw.close();
                    fw2.close();
                    fw3.close();
                    window.setVisible(false);
                    window.dispose();
                    System.out.println("File Updated");
                    Payment_Information pi = new Payment_Information();

                    // This is Where we Should link to Payment Info
                    // such as Credit card or in store purchase
                } else {
                    if (!email.equals(verifiedEmail)) {
                        verifyEmailTextField.requestFocusInWindow();
                        verifyEmailTextField.selectAll();
                        displayError.setText("Emails don't match");
                    } else if (!password.equals(verifiedPassword)) {
                        verifyPasswordTextField.requestFocusInWindow();
                        verifyPasswordTextField.selectAll();
                        displayError.setText("Passwords don't match");
                    }
                }*/

            new Mainpage().setVisible(true);
            this.setVisible(false);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + "");

        }
    }//GEN-LAST:event_createButtonActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        new TermsAndService().setVisible(true);
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton cancelButton;
    public javax.swing.JButton createButton;
    public javax.swing.JComboBox<String> dayDOB;
    public javax.swing.JCheckBox emailCheckBox;
    public javax.swing.JTextField emailTextField;
    public javax.swing.JComboBox<String> jComboBox3;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JComboBox<String> monthDOB;
    public javax.swing.JTextField nameTextField;
    public javax.swing.JPasswordField passwordField;
    public javax.swing.JCheckBox termsCheckBox;
    public javax.swing.JTextField verifyEmailTextField;
    public javax.swing.JPasswordField verifyPasswordField;
    // End of variables declaration//GEN-END:variables
}

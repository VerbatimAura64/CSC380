/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.movieprogram.Main;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Robert
 */
public class Payment_Information extends javax.swing.JFrame {

    /**
     * Creates new form Payment_Information
     */
    double adultPrice = 11.50;
    double childPrice = 9.25;
    double seniorPrice = 8.75;
    double seniorTotal;
    double adultTotal;
    double childTotal;
    int a1Available = 1;
    int a2Available = 1;
    int a3Available = 1;
    int a4Available = 1;
    int a5Available = 1;
    int a6Available = 1;
    int a7Available = 1;
    int a8Available = 1;
    int b1Available = 1;
    int b2Available = 1;
    int b3Available = 1;
    int b4Available = 1;
    int b5Available = 1;
    int b6Available = 1;
    int b7Available = 1;
    int b8Available = 1;
    int c1Available = 1;
    int c2Available = 1;
    int c3Available = 1;
    int c4Available = 1;
    int c5Available = 1;
    int c6Available = 1;
    int c7Available = 1;
    int c8Available = 1;
    int d1Available = 1;
    int d2Available = 1;
    int d3Available = 1;
    int d4Available = 1;
    int d5Available = 1;
    int d6Available = 1;
    int d7Available = 1;
    int d8Available = 1;
    int e1Available = 1;
    int e2Available = 1;
    int e3Available = 1;
    int e4Available = 1;
    int e5Available = 1;
    int e6Available = 1;
    int e7Available = 1;
    int e8Available = 1;
    int f1Available = 1;
    int f2Available = 1;
    int f3Available = 1;
    int f4Available = 1;
    int f5Available = 1;
    int f6Available = 1;
    int f7Available = 1;
    int f8Available = 1;
    int g1Available = 1;
    int g2Available = 1;
    int g3Available = 1;
    int g4Available = 1;
    int g5Available = 1;
    int g6Available = 1;
    int g7Available = 1;
    int g8Available = 1;

    public Payment_Information() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        creditCardNumberField = new javax.swing.JTextField();
        ccvNumberField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        monthComboBox = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stateComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        adultTicketTextField = new javax.swing.JTextField();
        childTicketTextField = new javax.swing.JTextField();
        seniorTicketTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        adultTotalTextField = new javax.swing.JFormattedTextField();
        childTotalTextField = new javax.swing.JFormattedTextField();
        seniorTotalTextField = new javax.swing.JFormattedTextField();
        totalTextField = new javax.swing.JFormattedTextField();
        adultTicketPrice = new javax.swing.JFormattedTextField();
        childTicketPrice = new javax.swing.JFormattedTextField();
        seniorTicketPrice = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        discountTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        address1TextField = new javax.swing.JTextField();
        address2TextField = new javax.swing.JTextField();
        zipTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Credit Card");

        jLabel2.setText("CCV");

        jLabel3.setText("EXP Date");

        creditCardNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditCardNumberFieldActionPerformed(evt);
            }
        });

        ccvNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccvNumberFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec" }));

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27" }));

        jLabel4.setText("Month");

        jLabel5.setText("Year");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Payment Information");

        jLabel7.setText("Name on card");

        jLabel8.setText("Address");

        jLabel9.setText("State");

        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));

        jLabel10.setText("Zip Code");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Total Cost");

        jLabel12.setText("Adult Tickets");

        jLabel13.setText("Child Tickets");

        jLabel14.setText("Senior Tickets");

        adultTicketTextField.setEditable(false);
        adultTicketTextField.setText(Integer.toString(TicketSelector.adultTicketTotal));

        childTicketTextField.setEditable(false);
        childTicketTextField.setText(Integer.toString(TicketSelector.childTicketTotal));
        childTicketTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childTicketTextFieldActionPerformed(evt);
            }
        });

        seniorTicketTextField.setEditable(false);
        seniorTicketTextField.setText(Integer.toString(TicketSelector.seniorTicketTotal));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("TOTAL :");

        adultTotalTextField.setEditable(false);
        adultTotalTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.adultPrices == 0.0) {
            adultTotalTextField.setValue(TicketSelector.adultTicketTotal * adultPrice);
        } else {
            adultTotalTextField.setValue(TicketSelector.adultTicketTotal * AdminPrices.adultPrices);
        }

        childTotalTextField.setEditable(false);
        childTotalTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.childPrices == 0.0) {
            childTotalTextField.setValue(TicketSelector.childTicketTotal * childPrice);
        } else {
            childTotalTextField.setValue(TicketSelector.childTicketTotal * AdminPrices.childPrices);
        }

        seniorTotalTextField.setEditable(false);
        seniorTotalTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.seniorPrices == 0.0) {
            seniorTotalTextField.setValue(TicketSelector.seniorTicketTotal * seniorPrice);
        } else {
            seniorTotalTextField.setValue(TicketSelector.seniorTicketTotal * AdminPrices.seniorPrices);
        }
        seniorTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seniorTotalTextFieldActionPerformed(evt);
            }
        });

        totalTextField.setEditable(false);
        totalTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        double childTicketTotal = (Double) childTotalTextField.getValue();
        double adultTicketTotal = (Double) adultTotalTextField.getValue();
        double seniorTicketTotal = (Double) seniorTotalTextField.getValue();
        totalTextField.setValue(adultTicketTotal + childTicketTotal + seniorTicketTotal);

        adultTicketPrice.setEditable(false);
        adultTicketPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.adultPrices == 0.0) {
            adultTicketPrice.setValue(adultPrice);
        } else {
            adultTicketPrice.setValue(AdminPrices.adultPrices);
        }

        childTicketPrice.setEditable(false);
        childTicketPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.childPrices == 0.0) {
            childTicketPrice.setValue(childPrice);
        } else {
            childTicketPrice.setValue(AdminPrices.childPrices);
        }

        seniorTicketPrice.setEditable(false);
        seniorTicketPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        if (AdminPrices.seniorPrices == 0.0) {
            seniorTicketPrice.setValue(seniorPrice);
        } else {
            seniorTicketPrice.setValue(AdminPrices.seniorPrices);
        }

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("x");
        jLabel15.setToolTipText("");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("x");
        jLabel16.setToolTipText("");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("x");
        jLabel17.setToolTipText("");

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel19.setText("Dicount Code");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adultTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(childTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adultTotalTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(childTotalTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seniorTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(adultTicketPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(childTicketPrice))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(seniorTotalTextField))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seniorTicketPrice))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel19))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(discountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalTextField)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(adultTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adultTicketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adultTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(childTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(childTicketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(childTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seniorTicketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seniorTicketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seniorTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(discountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ccvNumberField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(creditCardNumberField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(address1TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(address2TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zipTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(creditCardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ccvNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(address1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)))
                .addComponent(address2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(zipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void creditCardNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditCardNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditCardNumberFieldActionPerformed

    private void ccvNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccvNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccvNumberFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String creditCardNumber = creditCardNumberField.getText();
        String ccvNumber = ccvNumberField.getText();
        String name = nameTextField.getText();
        String month = (String) monthComboBox.getSelectedItem();
        String year = (String) yearComboBox.getSelectedItem();
        String address1 = address1TextField.getText();
        String address2 = address1TextField.getText();
        String state = (String) stateComboBox.getSelectedItem();
        String zip = zipTextField.getText();

        if (creditCardNumber.length() == 0) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid credit card.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (creditCardNumber.length() < 16 || creditCardNumber.length() > 16) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "Not a valid credit card number.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (ccvNumber.length() == 0) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid CCV number.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (ccvNumber.length() < 3 || ccvNumber.length() > 3) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "Not a valid ccv number.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (month.equals("--")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid expiration month.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (year.equals("--")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid expiration year.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (name.isEmpty()) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a name.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (address1.isEmpty()) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a billing address.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (state.equals("--")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid state.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (zip.length() == 0) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You must enter a valid zip code.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (zip.length() > 5 || zip.length() < 5) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "Not a valid zip code.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                String url = "jdbc:derby://localhost:1527/FinalDB";
                Connection conn = DriverManager.getConnection(url, "verb", "verb");
                //Connection conn = DriverManager.getConnection(url, "csc", "380");
                Statement st = conn.createStatement();
                if (SeatSelector.seatList.contains("A1")) {
                    a1Available = 0;
                } else {
                    a1Available = SeatSelector.a1Available;
                }
                if (SeatSelector.seatList.contains("A2")) {
                    a2Available = 0;
                } else {
                    a2Available = SeatSelector.a2Available;
                }
                if (SeatSelector.seatList.contains("A3")) {
                    a3Available = 0;
                } else {
                    a3Available = SeatSelector.a3Available;
                }
                if (SeatSelector.seatList.contains("A4")) {
                    a4Available = 0;
                } else {
                    a4Available = SeatSelector.a4Available;
                }
                if (SeatSelector.seatList.contains("A5")) {
                    a5Available = 0;
                } else {
                    a5Available = SeatSelector.a5Available;
                }
                if (SeatSelector.seatList.contains("A6")) {
                    a6Available = 0;
                } else {
                    a6Available = SeatSelector.a6Available;
                }
                if (SeatSelector.seatList.contains("A7")) {
                    a7Available = 0;
                } else {
                    a7Available = SeatSelector.a7Available;
                }
                if (SeatSelector.seatList.contains("A8")) {
                    a8Available = 0;
                } else {
                    a8Available = SeatSelector.a8Available;
                }
                if (SeatSelector.seatList.contains("B1")) {
                    b1Available = 0;
                } else {
                    b1Available = SeatSelector.b1Available;
                }
                if (SeatSelector.seatList.contains("B2")) {
                    b2Available = 0;
                } else {
                    b2Available = SeatSelector.b2Available;
                }
                if (SeatSelector.seatList.contains("B3")) {
                    b3Available = 0;
                } else {
                    g3Available = SeatSelector.b3Available;
                }
                if (SeatSelector.seatList.contains("B4")) {
                    b4Available = 0;
                } else {
                    b4Available = SeatSelector.b4Available;
                }
                if (SeatSelector.seatList.contains("B5")) {
                    b5Available = 0;
                } else {
                    b5Available = SeatSelector.b5Available;
                }
                if (SeatSelector.seatList.contains("B6")) {
                    b6Available = 0;
                } else {
                    b6Available = SeatSelector.b6Available;
                }
                if (SeatSelector.seatList.contains("B7")) {
                    b7Available = 0;
                } else {
                    b7Available = SeatSelector.b7Available;
                }
                if (SeatSelector.seatList.contains("B8")) {
                    b8Available = 0;
                } else {
                    b8Available = SeatSelector.b8Available;
                }
                if (SeatSelector.seatList.contains("C1")) {
                    c1Available = 0;
                } else {
                    c1Available = SeatSelector.c1Available;
                }
                if (SeatSelector.seatList.contains("C2")) {
                    c2Available = 0;
                } else {
                    c2Available = SeatSelector.c2Available;
                }
                if (SeatSelector.seatList.contains("C3")) {
                    c3Available = 0;
                } else {
                    c3Available = SeatSelector.c3Available;
                }
                if (SeatSelector.seatList.contains("C4")) {
                    c4Available = 0;
                } else {
                    c4Available = SeatSelector.c4Available;
                }
                if (SeatSelector.seatList.contains("C5")) {
                    c5Available = 0;
                } else {
                    c5Available = SeatSelector.c5Available;
                }
                if (SeatSelector.seatList.contains("C6")) {
                    c6Available = 0;
                } else {
                    c6Available = SeatSelector.c6Available;
                }
                if (SeatSelector.seatList.contains("C7")) {
                    c7Available = 0;
                } else {
                    c7Available = SeatSelector.c7Available;
                }
                if (SeatSelector.seatList.contains("C8")) {
                    c8Available = 0;
                } else {
                    c8Available = SeatSelector.c8Available;
                }
                if (SeatSelector.seatList.contains("D1")) {
                    d1Available = 0;
                } else {
                    d1Available = SeatSelector.d1Available;
                }
                if (SeatSelector.seatList.contains("D2")) {
                    d2Available = 0;
                } else {
                    d2Available = SeatSelector.d2Available;
                }
                if (SeatSelector.seatList.contains("D3")) {
                    d3Available = 0;
                } else {
                    d3Available = SeatSelector.d3Available;
                }
                if (SeatSelector.seatList.contains("D4")) {
                    d4Available = 0;
                } else {
                    d4Available = SeatSelector.d4Available;
                }
                if (SeatSelector.seatList.contains("D5")) {
                    d5Available = 0;
                } else {
                    d5Available = SeatSelector.d5Available;
                }
                if (SeatSelector.seatList.contains("D6")) {
                    d6Available = 0;
                } else {
                    d6Available = SeatSelector.d6Available;
                }
                if (SeatSelector.seatList.contains("D7")) {
                    d7Available = 0;
                } else {
                    d7Available = SeatSelector.d7Available;
                }
                if (SeatSelector.seatList.contains("D8")) {
                    d8Available = 0;
                } else {
                    d8Available = SeatSelector.d8Available;
                }
                if (SeatSelector.seatList.contains("E1")) {
                    e1Available = 0;
                } else {
                    e1Available = SeatSelector.e1Available;
                }
                if (SeatSelector.seatList.contains("E2")) {
                    e2Available = 0;
                } else {
                    e2Available = SeatSelector.e2Available;
                }
                if (SeatSelector.seatList.contains("E3")) {
                    e3Available = 0;
                } else {
                    e3Available = SeatSelector.e3Available;
                }
                if (SeatSelector.seatList.contains("E4")) {
                    e4Available = 0;
                } else {
                    e4Available = SeatSelector.e4Available;
                }
                if (SeatSelector.seatList.contains("E5")) {
                    e5Available = 0;
                } else {
                    e5Available = SeatSelector.e5Available;
                }
                if (SeatSelector.seatList.contains("E6")) {
                    e6Available = 0;
                } else {
                    e6Available = SeatSelector.e6Available;
                }
                if (SeatSelector.seatList.contains("E7")) {
                    e7Available = 0;
                } else {
                    e7Available = SeatSelector.e7Available;
                }
                if (SeatSelector.seatList.contains("E8")) {
                    e8Available = 0;
                } else {
                    e8Available = SeatSelector.e8Available;
                }
                if (SeatSelector.seatList.contains("F1")) {
                    f1Available = 0;
                } else {
                    f1Available = SeatSelector.f1Available;
                }
                if (SeatSelector.seatList.contains("F2")) {
                    f2Available = 0;
                } else {
                    f2Available = SeatSelector.f2Available;
                }
                if (SeatSelector.seatList.contains("F3")) {
                    f3Available = 0;
                } else {
                    f3Available = SeatSelector.f3Available;
                }
                if (SeatSelector.seatList.contains("F4")) {
                    f4Available = 0;
                } else {
                    f4Available = SeatSelector.f4Available;
                }
                if (SeatSelector.seatList.contains("F5")) {
                    f5Available = 0;
                } else {
                    f5Available = SeatSelector.f5Available;
                }
                if (SeatSelector.seatList.contains("F6")) {
                    f6Available = 0;
                } else {
                    f6Available = SeatSelector.f6Available;
                }
                if (SeatSelector.seatList.contains("F7")) {
                    f7Available = 0;
                } else {
                    f7Available = SeatSelector.f7Available;
                }
                if (SeatSelector.seatList.contains("F8")) {
                    f8Available = 0;
                } else {
                    f8Available = SeatSelector.f8Available;
                }
                if (SeatSelector.seatList.contains("G1")) {
                    g1Available = 0;
                } else {
                    g1Available = SeatSelector.g1Available;
                }
                if (SeatSelector.seatList.contains("G2")) {
                    g2Available = 0;
                } else {
                    g2Available = SeatSelector.g2Available;
                }
                if (SeatSelector.seatList.contains("G3")) {
                    g3Available = 0;
                } else {
                    g3Available = SeatSelector.g3Available;
                }
                if (SeatSelector.seatList.contains("G4")) {
                    g4Available = 0;
                } else {
                    g4Available = SeatSelector.g4Available;
                }
                if (SeatSelector.seatList.contains("G5")) {
                    g5Available = 0;
                } else {
                    g5Available = SeatSelector.g5Available;
                }
                if (SeatSelector.seatList.contains("G6")) {
                    g6Available = 0;
                } else {
                    g6Available = SeatSelector.g6Available;
                }
                if (SeatSelector.seatList.contains("G7")) {
                    g7Available = 0;
                } else {
                    g7Available = SeatSelector.g7Available;
                }
                if (SeatSelector.seatList.contains("G8")) {
                    g8Available = 0;
                } else {
                    g8Available = SeatSelector.g8Available;
                }
                try {
                    st.executeUpdate("DELETE FROM VERB.SOLDSEATS WHERE SHOWING = '" + Mainpage.primaryKey + "'");
                    //st.executeUpdate("DELETE FROM CSC.SOLDSEATS WHERE SHOWING = '" + Mainpage.primaryKey + "'");
                } catch (Exception e) {
                    System.err.print("");
                }
                                st.executeUpdate("INSERT INTO VERB.SOLDSEATS (SHOWING, A1, A2, A3, A4, A5, A6, A7, A8, B1, B2, B3, B4, B5, B6, B7, B8, C1, C2, C3, C4, C5, C6, C7, C8, D1, D2, D3, D4, D5, D6, D7, D8, E1, E2, E3, E4, E5, E6, E7, E8, F1, F2, F3, F4, F5, F6, F7, F8, G1, G2, G3, G4, G5, G6, G7, G8) VALUES('" + Mainpage.primaryKey + "'," + a1Available + "," + a2Available + "," + a3Available + "," + a4Available + "," + a5Available + "," + a6Available + "," + a7Available + "," + a8Available + "," + b1Available + "," + b2Available + "," + b3Available + "," + b4Available + "," + b5Available + "," + b6Available + "," + b7Available + "," + b8Available + "," + c1Available + "," + c2Available + "," + c3Available + "," + c4Available + "," + c5Available + "," + c6Available + "," + c7Available + "," + c8Available + "," + d1Available + "," + d2Available + "," + d3Available + "," + d4Available + "," + d5Available + "," + d6Available + "," + d7Available + "," + d8Available + "," + e1Available + "," + e2Available + "," + e3Available + "," + e4Available + "," + e5Available + "," + e6Available + "," + e7Available + "," + e8Available + "," + f1Available + "," + f2Available + "," + f3Available + "," + f4Available + "," + f5Available + "," + f6Available + "," + f7Available + "," + f8Available + "," + g1Available + "," + g2Available + "," + g3Available + "," + g4Available + "," + g5Available + "," + g6Available + "," + g7Available + "," + g8Available + ")");

                //st.executeUpdate("INSERT INTO CSC.SOLDSEATS (SHOWING, A1, A2, A3, A4, A5, A6, A7, A8, B1, B2, B3, B4, B5, B6, B7, B8, C1, C2, C3, C4, C5, C6, C7, C8, D1, D2, D3, D4, D5, D6, D7, D8, E1, E2, E3, E4, E5, E6, E7, E8, F1, F2, F3, F4, F5, F6, F7, F8, G1, G2, G3, G4, G5, G6, G7, G8) VALUES('" + Mainpage.primaryKey + "'," + a1Available + "," + a2Available + "," + a3Available + "," + a4Available + "," + a5Available + "," + a6Available + "," + a7Available + "," + a8Available + "," + b1Available + "," + b2Available + "," + b3Available + "," + b4Available + "," + b5Available + "," + b6Available + "," + b7Available + "," + b8Available + "," + c1Available + "," + c2Available + "," + c3Available + "," + c4Available + "," + c5Available + "," + c6Available + "," + c7Available + "," + c8Available + "," + d1Available + "," + d2Available + "," + d3Available + "," + d4Available + "," + d5Available + "," + d6Available + "," + d7Available + "," + d8Available + "," + e1Available + "," + e2Available + "," + e3Available + "," + e4Available + "," + e5Available + "," + e6Available + "," + e7Available + "," + e8Available + "," + f1Available + "," + f2Available + "," + f3Available + "," + f4Available + "," + f5Available + "," + f6Available + "," + f7Available + "," + f8Available + "," + g1Available + "," + g2Available + "," + g3Available + "," + g4Available + "," + g5Available + "," + g6Available + "," + g7Available + "," + g8Available + ")");
                conn.commit();
                st.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Payment_Information.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            new ConfirmationPage().setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        try {
            new SeatSelector().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Payment_Information.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void childTicketTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childTicketTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_childTicketTextFieldActionPerformed

    private void seniorTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seniorTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seniorTotalTextFieldActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        double childTicketTotal = (Double) childTotalTextField.getValue();
        double adultTicketTotal = (Double) adultTotalTextField.getValue();
        double seniorTicketTotal = (Double) seniorTotalTextField.getValue();
        double total = childTicketTotal + adultTicketTotal + seniorTicketTotal;
        if (discountTextField.getText().equals("GIVEUSANA")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "You got 100%! Congrats!", "You're Amazing", JOptionPane.OK_OPTION);
            totalTextField.setValue(total * 0);
        } else if (discountTextField.getText().equals("NEWBIE")) {
            totalTextField.setValue(total * .9);
        } else if (discountTextField.getText().equals("25OFF")) {
            totalTextField.setValue(total * .75);
        } else {
            Component frame = null;
            JOptionPane.showMessageDialog(frame, "Not a valid discount code.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment_Information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment_Information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment_Information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment_Information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment_Information().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField address1TextField;
    public javax.swing.JTextField address2TextField;
    public javax.swing.JFormattedTextField adultTicketPrice;
    public javax.swing.JTextField adultTicketTextField;
    public javax.swing.JFormattedTextField adultTotalTextField;
    public javax.swing.JTextField ccvNumberField;
    public javax.swing.JFormattedTextField childTicketPrice;
    public javax.swing.JTextField childTicketTextField;
    public javax.swing.JFormattedTextField childTotalTextField;
    public javax.swing.JTextField creditCardNumberField;
    public javax.swing.JTextField discountTextField;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JComboBox<String> monthComboBox;
    public javax.swing.JTextField nameTextField;
    public javax.swing.JFormattedTextField seniorTicketPrice;
    public javax.swing.JTextField seniorTicketTextField;
    public javax.swing.JFormattedTextField seniorTotalTextField;
    public javax.swing.JComboBox<String> stateComboBox;
    public javax.swing.JFormattedTextField totalTextField;
    public javax.swing.JComboBox<String> yearComboBox;
    public javax.swing.JTextField zipTextField;
    // End of variables declaration//GEN-END:variables
}
